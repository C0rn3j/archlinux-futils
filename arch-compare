#!/usr/bin/ruby

require 'pycall/import'
require 'tmpdir'

include PyCall::Import
pyimport :pyalpm

ARCHS = ["i486", "i686", "pentium4", "aarch64", "armv7h", "riscv64", "loong64"]
DBS = ["core", "extra", "community"]

common_header = '
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet">
<style>tr:hover { background-color: #ddd !important; }</style>
<div class="table-responsive-sm"><table class="table table-sm table-hover">
<thead><tr><th scope="col" rowspan=2>Arch</th>
<th scope="col" colspan=3>[core]</th><th scope="col" colspan=3>[extra]</th><th scope="col" colspan=3>[community]</th>
<tr>
<th scope="col">Up-to-date (Ratio%)</th><th scope="col">Outdated</th><th scope="col">Missing</th>
<th scope="col">Up-to-date (Ratio%)</th><th scope="col">Outdated</th><th scope="col">Missing</th>
<th scope="col">Up-to-date (Ratio%)</th><th scope="col">Outdated</th><th scope="col">Missing</th>
</tr></thead><tbody>'

pkgdata = {}
pkgcount = {}

`pacman -Sy`
# x86_64 as baseline
File.open('/var/www/archlinuxriscv/.status/compare.html', 'w') do |f|
    f.puts common_header + "<tr><td>x86_64</td>"
    handle = pyalpm.Handle.new(".", "/var/lib/pacman")
    DBS.each do |repo|
        db_handle = handle.register_syncdb(repo, 0)
        pkgcount[repo] = 0
        db_handle.search("").each do |package|
            pkgdata[package.name] = package.version
            pkgcount[repo] += 1
        end
        f.puts "<td>#{pkgcount[repo]}</td><td>0</td><td>0</td>"
    end
    f.puts "</tr>"

    # compare all other arches
    ARCHS.each do |arch, path|
        f.puts "<tr><td>#{arch}</td>"
        DBS.each do |repo|
            db_handle = handle.register_syncdb(arch + "-" + repo, 0)
            uptodate = 0
            outdated = 0
            db_handle.search("").each do |package|
                if pkgdata.has_key? package.name
                    version = package.version.split("-")
                    version[1] = version[1].split(".")[0]
                    version = version.join("-")
                    if pkgdata[package.name] == version
                        uptodate += 1
                    else
                        outdated += 1
                    end
                end
            end
            percent = (uptodate * 100.0 / pkgcount[repo]).round(2)
            f.puts "<td><font color=green>#{uptodate} (#{percent}%)</font></td>
                    <td><font color=yellow>#{outdated}</font></td>
                    <td><font color=red>#{pkgcount[repo] - uptodate - outdated}</font></td>"
        end
        f.puts "</tr>"
    end
    f.puts "</tbody></table></div>"
end
