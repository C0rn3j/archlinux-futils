#!/usr/bin/ruby

`cd /var/www/aosc-os-abbs && git pull`
`treevsrepo --tree /var/www/aosc-os-abbs > /tmp/treevsrepo.txt`

common_header = '
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<style>tr:hover { background-color: #ddd !important; }</style>
<table class="table is-hoverable">'

def vercmp_workaround(version)
    if version.include? "-"
        return version
    else
        return version + "-0"
    end
end

arch_data = Hash.new{|h,k| h[k] = []}

File.open('/var/www/aosc/treevsrepo/index.html.tmp', 'w') do |f|
    f.puts common_header + '
    <thead><tr><th>Package</th><th>Arch</th><th>Tree Version</th>
    <th>Repo Version</th></thead><tbody>'

    File.open('/tmp/treevsrepo.txt').each do |line|
        case line.split("|").map(&:strip)
        in [name, arch, tree_version, repo_version]
            next if tree_version == "tree_version" or name == "" # skip header or broken lines
            if `vercmp #{vercmp_workaround(tree_version)} #{vercmp_workaround(repo_version)}`.to_i > 0
                tree_color = "green"
                repo_color = "red"
            else
                tree_color = "red"
                repo_color = "green"
            end
            f.puts "<tr><td>#{name}</td><td>#{arch}</td>
                    <td><font color=#{tree_color}>#{tree_version}</font></td>
                    <td><font color=#{repo_color}>#{repo_version}</font></td></tr>"
            arch_data[arch] << [name, tree_version, tree_color, repo_version, repo_color]
        else
            next
        end
    end

    f.puts '</tbody></table>'
end

File.rename('/var/www/aosc/treevsrepo/index.html.tmp', '/var/www/aosc/treevsrepo/index.html')

arch_data.each do |arch, data|
    puts "Generating #{arch} with #{data.length} entries..."
    arch_dir = "/var/www/aosc/treevsrepo/#{arch}"
    Dir.mkdir(arch_dir) unless File.exists?(arch_dir)
    File.open("#{arch_dir}/index.html.tmp", 'w') do |f|
        f.puts common_header + '<thead><tr><th>Package</th><th>Tree Version</th>
        <th>Repo Version</th></thead><tbody>'
        data.each do |name, tree_version, tree_color, repo_version, repo_color|
            f.puts "<tr><td>#{name}</td>
                    <td><font color=#{tree_color}>#{tree_version}</font></td>
                    <td><font color=#{repo_color}>#{repo_version}</font></td></tr>"
        end
        f.puts '</tbody></table>'
    end
    File.rename("#{arch_dir}/index.html.tmp", "#{arch_dir}/index.html")
end
